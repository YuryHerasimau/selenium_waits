{
  "uid" : "3d27754e3ac66ae7",
  "name" : "test_register_with_implicit_waits",
  "fullName" : "tests.test_selenium_waits#test_register_with_implicit_waits",
  "historyId" : "da0cec5103bd235948f004d488efeaf3",
  "time" : {
    "start" : 1719405781955,
    "stop" : 1719405781955,
    "duration" : 0
  },
  "description" : "Using Implicit waits",
  "descriptionHtml" : "<p>Using Implicit waits</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: 'chromedriver-linux64' executable may have wrong permissions.",
  "statusTrace" : "self = <selenium.webdriver.chrome.service.Service object at 0x7f4d3b670990>\npath = '/usr/local/share/chromedriver-linux64'\n\n    def _start_process(self, path: str) -> None:\n        \"\"\"Creates a subprocess by executing the command provided.\n    \n        :param cmd: full command to execute\n        \"\"\"\n        cmd = [path]\n        cmd.extend(self.command_line_args())\n        close_file_descriptors = self.popen_kw.pop(\"close_fds\", system() != \"Windows\")\n        try:\n            start_info = None\n            if system() == \"Windows\":\n                start_info = subprocess.STARTUPINFO()\n                start_info.dwFlags = subprocess.CREATE_NEW_CONSOLE | subprocess.STARTF_USESHOWWINDOW\n                start_info.wShowWindow = subprocess.SW_HIDE\n    \n>           self.process = subprocess.Popen(\n                cmd,\n                env=self.env,\n                close_fds=close_file_descriptors,\n                stdout=self.log_output,\n                stderr=self.log_output,\n                stdin=PIPE,\n                creationflags=self.creation_flags,\n                startupinfo=start_info,\n                **self.popen_kw,\n            )\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/common/service.py:208: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/subprocess.py:1026: in __init__\n    self._execute_child(args, executable, preexec_fn, close_fds,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Popen: returncode: 255 args: ['/usr/local/share/chromedriver-linux64', '--p...>\nargs = ['/usr/local/share/chromedriver-linux64', '--port=35983']\nexecutable = b'/usr/local/share/chromedriver-linux64', preexec_fn = None\nclose_fds = True, pass_fds = (), cwd = None\nenv = environ({'SELENIUM_JAR_PATH': '/usr/share/java/selenium-server.jar', 'CONDA': '/usr/share/miniconda', 'GITHUB_WORKSPAC...T_VERSION': '8.2.0', 'PYTEST_CURRENT_TEST': 'tests/test_selenium_waits.py::test_register_with_implicit_waits (setup)'})\nstartupinfo = None, creationflags = 0, shell = False, p2cread = 5, p2cwrite = 6\nc2pread = -1, c2pwrite = 7, errread = -1, errwrite = 7, restore_signals = True\ngid = None, gids = None, uid = None, umask = -1, start_new_session = False\nprocess_group = -1\n\n    def _execute_child(self, args, executable, preexec_fn, close_fds,\n                       pass_fds, cwd, env,\n                       startupinfo, creationflags, shell,\n                       p2cread, p2cwrite,\n                       c2pread, c2pwrite,\n                       errread, errwrite,\n                       restore_signals,\n                       gid, gids, uid, umask,\n                       start_new_session, process_group):\n        \"\"\"Execute program (POSIX version)\"\"\"\n    \n        if isinstance(args, (str, bytes)):\n            args = [args]\n        elif isinstance(args, os.PathLike):\n            if shell:\n                raise TypeError('path-like args is not allowed when '\n                                'shell is true')\n            args = [args]\n        else:\n            args = list(args)\n    \n        if shell:\n            # On Android the default shell is at '/system/bin/sh'.\n            unix_shell = ('/system/bin/sh' if\n                      hasattr(sys, 'getandroidapilevel') else '/bin/sh')\n            args = [unix_shell, \"-c\"] + args\n            if executable:\n                args[0] = executable\n    \n        if executable is None:\n            executable = args[0]\n    \n        sys.audit(\"subprocess.Popen\", executable, args, cwd, env)\n    \n        if (_USE_POSIX_SPAWN\n                and os.path.dirname(executable)\n                and preexec_fn is None\n                and not close_fds\n                and not pass_fds\n                and cwd is None\n                and (p2cread == -1 or p2cread > 2)\n                and (c2pwrite == -1 or c2pwrite > 2)\n                and (errwrite == -1 or errwrite > 2)\n                and not start_new_session\n                and process_group == -1\n                and gid is None\n                and gids is None\n                and uid is None\n                and umask < 0):\n            self._posix_spawn(args, executable, env, restore_signals,\n                              p2cread, p2cwrite,\n                              c2pread, c2pwrite,\n                              errread, errwrite)\n            return\n    \n        orig_executable = executable\n    \n        # For transferring possible exec failure from child to parent.\n        # Data format: \"exception name:hex errno:description\"\n        # Pickle is not used; it is complex and involves memory allocation.\n        errpipe_read, errpipe_write = os.pipe()\n        # errpipe_write must not be in the standard io 0, 1, or 2 fd range.\n        low_fds_to_close = []\n        while errpipe_write < 3:\n            low_fds_to_close.append(errpipe_write)\n            errpipe_write = os.dup(errpipe_write)\n        for low_fd in low_fds_to_close:\n            os.close(low_fd)\n        try:\n            try:\n                # We must avoid complex work that could involve\n                # malloc or free in the child process to avoid\n                # potential deadlocks, thus we do all this here.\n                # and pass it to fork_exec()\n    \n                if env is not None:\n                    env_list = []\n                    for k, v in env.items():\n                        k = os.fsencode(k)\n                        if b'=' in k:\n                            raise ValueError(\"illegal environment variable name\")\n                        env_list.append(k + b'=' + os.fsencode(v))\n                else:\n                    env_list = None  # Use execv instead of execve.\n                executable = os.fsencode(executable)\n                if os.path.dirname(executable):\n                    executable_list = (executable,)\n                else:\n                    # This matches the behavior of os._execvpe().\n                    executable_list = tuple(\n                        os.path.join(os.fsencode(dir), executable)\n                        for dir in os.get_exec_path(env))\n                fds_to_keep = set(pass_fds)\n                fds_to_keep.add(errpipe_write)\n                self.pid = _fork_exec(\n                        args, executable_list,\n                        close_fds, tuple(sorted(map(int, fds_to_keep))),\n                        cwd, env_list,\n                        p2cread, p2cwrite, c2pread, c2pwrite,\n                        errread, errwrite,\n                        errpipe_read, errpipe_write,\n                        restore_signals, start_new_session,\n                        process_group, gid, gids, uid, umask,\n                        preexec_fn, _USE_VFORK)\n                self._child_created = True\n            finally:\n                # be sure the FD is closed no matter what\n                os.close(errpipe_write)\n    \n            self._close_pipe_fds(p2cread, p2cwrite,\n                                 c2pread, c2pwrite,\n                                 errread, errwrite)\n    \n            # Wait for exec to fail or succeed; possibly raising an\n            # exception (limited in size)\n            errpipe_data = bytearray()\n            while True:\n                part = os.read(errpipe_read, 50000)\n                errpipe_data += part\n                if not part or len(errpipe_data) > 50000:\n                    break\n        finally:\n            # be sure the FD is closed no matter what\n            os.close(errpipe_read)\n    \n        if errpipe_data:\n            try:\n                pid, sts = os.waitpid(self.pid, 0)\n                if pid == self.pid:\n                    self._handle_exitstatus(sts)\n                else:\n                    self.returncode = sys.maxsize\n            except ChildProcessError:\n                pass\n    \n            try:\n                exception_name, hex_errno, err_msg = (\n                        errpipe_data.split(b':', 2))\n                # The encoding here should match the encoding\n                # written in by the subprocess implementations\n                # like _posixsubprocess\n                err_msg = err_msg.decode()\n            except ValueError:\n                exception_name = b'SubprocessError'\n                hex_errno = b'0'\n                err_msg = 'Bad exception data from child: {!r}'.format(\n                              bytes(errpipe_data))\n            child_exception_type = getattr(\n                    builtins, exception_name.decode('ascii'),\n                    SubprocessError)\n            if issubclass(child_exception_type, OSError) and hex_errno:\n                errno_num = int(hex_errno, 16)\n                if err_msg == \"noexec:chdir\":\n                    err_msg = \"\"\n                    # The error must be from chdir(cwd).\n                    err_filename = cwd\n                elif err_msg == \"noexec\":\n                    err_msg = \"\"\n                    err_filename = None\n                else:\n                    err_filename = orig_executable\n                if errno_num != 0:\n                    err_msg = os.strerror(errno_num)\n                if err_filename is not None:\n>                   raise child_exception_type(errno_num, err_msg, err_filename)\nE                   PermissionError: [Errno 13] Permission denied: '/usr/local/share/chromedriver-linux64'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/subprocess.py:1955: PermissionError\n\nThe above exception was the direct cause of the following exception:\n\nchrome_options = <selenium.webdriver.chrome.options.Options object at 0x7f4d3b671690>\n\n    @pytest.fixture()\n    def driver(chrome_options):\n        if os.getenv(\"CI\"):  # Check if running on GitHub Actions\n            service = Service(executable_path=chrome_driver_path)\n>           service.start()\n\nconftest.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/common/service.py:98: in start\n    self._start_process(self._path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.chrome.service.Service object at 0x7f4d3b670990>\npath = '/usr/local/share/chromedriver-linux64'\n\n    def _start_process(self, path: str) -> None:\n        \"\"\"Creates a subprocess by executing the command provided.\n    \n        :param cmd: full command to execute\n        \"\"\"\n        cmd = [path]\n        cmd.extend(self.command_line_args())\n        close_file_descriptors = self.popen_kw.pop(\"close_fds\", system() != \"Windows\")\n        try:\n            start_info = None\n            if system() == \"Windows\":\n                start_info = subprocess.STARTUPINFO()\n                start_info.dwFlags = subprocess.CREATE_NEW_CONSOLE | subprocess.STARTF_USESHOWWINDOW\n                start_info.wShowWindow = subprocess.SW_HIDE\n    \n            self.process = subprocess.Popen(\n                cmd,\n                env=self.env,\n                close_fds=close_file_descriptors,\n                stdout=self.log_output,\n                stderr=self.log_output,\n                stdin=PIPE,\n                creationflags=self.creation_flags,\n                startupinfo=start_info,\n                **self.popen_kw,\n            )\n            logger.debug(\n                \"Started executable: `%s` in a child process with pid: %s using %s to output %s\",\n                self._path,\n                self.process.pid,\n                self.creation_flags,\n                self.log_output,\n            )\n        except TypeError:\n            raise\n        except OSError as err:\n            if err.errno == errno.EACCES:\n>               raise WebDriverException(\n                    f\"'{os.path.basename(self._path)}' executable may have wrong permissions.\"\n                ) from err\nE               selenium.common.exceptions.WebDriverException: Message: 'chromedriver-linux64' executable may have wrong permissions.\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/common/service.py:230: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "chrome_options",
    "time" : {
      "start" : 1719405781956,
      "stop" : 1719405781956,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1719405781956,
      "stop" : 1719405781956,
      "duration" : 0
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: 'chromedriver-linux64' executable may have wrong permissions.\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1122, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 877, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/selenium_waits/selenium_waits/conftest.py\", line 36, in driver\n    service.start()\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/common/service.py\", line 98, in start\n    self._start_process(self._path)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/common/service.py\", line 230, in _start_process\n    raise WebDriverException(\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1719405781710,
      "stop" : 1719405781771,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_selenium_waits"
  }, {
    "name" : "host",
    "value" : "fv-az775-422"
  }, {
    "name" : "thread",
    "value" : "2319-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_selenium_waits"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "d30c71706e8ce1d1",
      "status" : "passed",
      "time" : {
        "start" : 1719405206448,
        "stop" : 1719405215232,
        "duration" : 8784
      }
    }, {
      "uid" : "769253e19cb69347",
      "status" : "passed",
      "time" : {
        "start" : 1719405023959,
        "stop" : 1719405032586,
        "duration" : 8627
      }
    }, {
      "uid" : "6279b8030cd0006b",
      "status" : "broken",
      "statusDetails" : "TypeError: expected str, bytes or os.PathLike object, not NoneType",
      "time" : {
        "start" : 1719404881319,
        "stop" : 1719404881319,
        "duration" : 0
      }
    }, {
      "uid" : "77ca9d84330deb3d",
      "status" : "passed",
      "time" : {
        "start" : 1719403654374,
        "stop" : 1719403663301,
        "duration" : 8927
      }
    }, {
      "uid" : "71b0a7f268ee365",
      "status" : "passed",
      "time" : {
        "start" : 1719331507806,
        "stop" : 1719331516379,
        "duration" : 8573
      }
    }, {
      "uid" : "1ac3eb6c4079bdd0",
      "status" : "passed",
      "time" : {
        "start" : 1719331120339,
        "stop" : 1719331128981,
        "duration" : 8642
      }
    }, {
      "uid" : "b646cdeb1270fdda",
      "status" : "passed",
      "time" : {
        "start" : 1719330847490,
        "stop" : 1719330856067,
        "duration" : 8577
      }
    }, {
      "uid" : "ffda276ffcd0ffde",
      "status" : "passed",
      "time" : {
        "start" : 1719330756018,
        "stop" : 1719330764594,
        "duration" : 8576
      }
    }, {
      "uid" : "e3812505cb78dfb7",
      "status" : "passed",
      "time" : {
        "start" : 1719330099370,
        "stop" : 1719330107998,
        "duration" : 8628
      }
    }, {
      "uid" : "f537ebf970936682",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location",
      "time" : {
        "start" : 1719330016468,
        "stop" : 1719330016468,
        "duration" : 0
      }
    }, {
      "uid" : "285ac702bda226ee",
      "status" : "passed",
      "time" : {
        "start" : 1719329622721,
        "stop" : 1719329631302,
        "duration" : 8581
      }
    }, {
      "uid" : "30a98899dd8bdf3c",
      "status" : "passed",
      "time" : {
        "start" : 1719329242085,
        "stop" : 1719329250717,
        "duration" : 8632
      }
    }, {
      "uid" : "ae6b9d8fa18d33de",
      "status" : "broken",
      "statusDetails" : "FileNotFoundError: [WinError 2] The system cannot find the file specified",
      "time" : {
        "start" : 1719329066398,
        "stop" : 1719329066398,
        "duration" : 0
      }
    }, {
      "uid" : "345979b990df1298",
      "status" : "passed",
      "time" : {
        "start" : 1719328929017,
        "stop" : 1719328937684,
        "duration" : 8667
      }
    }, {
      "uid" : "f2cd2ac0606ec182",
      "status" : "passed",
      "time" : {
        "start" : 1719325900888,
        "stop" : 1719325909475,
        "duration" : 8587
      }
    }, {
      "uid" : "8b50d276c97284bf",
      "status" : "passed",
      "time" : {
        "start" : 1719320807919,
        "stop" : 1719320816613,
        "duration" : 8694
      }
    }, {
      "uid" : "64f725d15b82a8a0",
      "status" : "passed",
      "time" : {
        "start" : 1719320579837,
        "stop" : 1719320588977,
        "duration" : 9140
      }
    }, {
      "uid" : "4def51b4ed914f0b",
      "status" : "passed",
      "time" : {
        "start" : 1719319581677,
        "stop" : 1719319590361,
        "duration" : 8684
      }
    }, {
      "uid" : "ba20690dd6637acf",
      "status" : "passed",
      "time" : {
        "start" : 1719151083441,
        "stop" : 1719151092229,
        "duration" : 8788
      }
    }, {
      "uid" : "11822f1a5bd3c24b",
      "status" : "passed",
      "time" : {
        "start" : 1719150863685,
        "stop" : 1719150873589,
        "duration" : 9904
      }
    }, {
      "uid" : "6d670f2e54806a15",
      "status" : "passed",
      "time" : {
        "start" : 1719150717804,
        "stop" : 1719150726725,
        "duration" : 8921
      }
    }, {
      "uid" : "d184d0eb0a15ae27",
      "status" : "passed",
      "time" : {
        "start" : 1719150109763,
        "stop" : 1719150118679,
        "duration" : 8916
      }
    }, {
      "uid" : "6f9a78f26e043dcd",
      "status" : "passed",
      "time" : {
        "start" : 1719128784010,
        "stop" : 1719128792773,
        "duration" : 8763
      }
    }, {
      "uid" : "bef717be5b7c103d",
      "status" : "passed",
      "time" : {
        "start" : 1719127906598,
        "stop" : 1719127915436,
        "duration" : 8838
      }
    }, {
      "uid" : "6315886cc396da16",
      "status" : "passed",
      "time" : {
        "start" : 1719127373936,
        "stop" : 1719127382665,
        "duration" : 8729
      }
    }, {
      "uid" : "8866e2483dd43193",
      "status" : "passed",
      "time" : {
        "start" : 1719045683435,
        "stop" : 1719045692198,
        "duration" : 8763
      }
    }, {
      "uid" : "6470a49abfeb1b65",
      "status" : "passed",
      "time" : {
        "start" : 1719044929835,
        "stop" : 1719044938652,
        "duration" : 8817
      }
    }, {
      "uid" : "20029d00673af321",
      "status" : "passed",
      "time" : {
        "start" : 1719044476110,
        "stop" : 1719044485010,
        "duration" : 8900
      }
    }, {
      "uid" : "330ab7adf1e2afec",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'Browser' object has no attribute 'implicitly_wait'",
      "time" : {
        "start" : 1719043867581,
        "stop" : 1719043867581,
        "duration" : 0
      }
    }, {
      "uid" : "50914ec78584529e",
      "status" : "passed",
      "time" : {
        "start" : 1719012774544,
        "stop" : 1719012783366,
        "duration" : 8822
      }
    }, {
      "uid" : "fbdc07c8ff6bd8ad",
      "status" : "passed",
      "time" : {
        "start" : 1719012541634,
        "stop" : 1719012550467,
        "duration" : 8833
      }
    }, {
      "uid" : "371139ef88b3779d",
      "status" : "passed",
      "time" : {
        "start" : 1718734900511,
        "stop" : 1718734909407,
        "duration" : 8896
      }
    }, {
      "uid" : "dd491eae432841ff",
      "status" : "passed",
      "time" : {
        "start" : 1718734544004,
        "stop" : 1718734552872,
        "duration" : 8868
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "cf84b54fe4d9d9f8",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/11//#testresult/cf84b54fe4d9d9f8",
        "status" : "passed",
        "time" : {
          "start" : 1719331631511,
          "stop" : 1719331639875,
          "duration" : 8364
        }
      }, {
        "uid" : "603bf7d5c6052e6f",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/10//#testresult/603bf7d5c6052e6f",
        "status" : "passed",
        "time" : {
          "start" : 1719331284266,
          "stop" : 1719331292608,
          "duration" : 8342
        }
      }, {
        "uid" : "8fb546866366bf41",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/9//#testresult/8fb546866366bf41",
        "status" : "passed",
        "time" : {
          "start" : 1719330238318,
          "stop" : 1719330246692,
          "duration" : 8374
        }
      }, {
        "uid" : "af450440d390361c",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/8//#testresult/af450440d390361c",
        "status" : "passed",
        "time" : {
          "start" : 1719329839285,
          "stop" : 1719329847720,
          "duration" : 8435
        }
      }, {
        "uid" : "69c72d1862d51d3f",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/7//#testresult/69c72d1862d51d3f",
        "status" : "passed",
        "time" : {
          "start" : 1719329357509,
          "stop" : 1719329365863,
          "duration" : 8354
        }
      }, {
        "uid" : "16ee61595e08d76b",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/6//#testresult/16ee61595e08d76b",
        "status" : "passed",
        "time" : {
          "start" : 1719328473496,
          "stop" : 1719328481857,
          "duration" : 8361
        }
      }, {
        "uid" : "607c9da8c80a65ea",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/5//#testresult/607c9da8c80a65ea",
        "status" : "passed",
        "time" : {
          "start" : 1719327476647,
          "stop" : 1719327485114,
          "duration" : 8467
        }
      }, {
        "uid" : "7a3d179f60a248bf",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/4//#testresult/7a3d179f60a248bf",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55764d99a6aa <unknown>\n#1 0x55764d67d0dc <unknown>\n#2 0x55764d6b202a <unknown>\n#3 0x55764d6ae43b <unknown>\n#4 0x55764d6f8ef9 <unknown>\n#5 0x55764d6ec613 <unknown>\n#6 0x55764d6bc4f7 <unknown>\n#7 0x55764d6bce4e <unknown>\n#8 0x55764d96087b <unknown>\n#9 0x55764d964921 <unknown>\n#10 0x55764d94c36e <unknown>\n#11 0x55764d965482 <unknown>\n#12 0x55764d930ccf <unknown>\n#13 0x55764d98a0a8 <unknown>\n#14 0x55764d98a280 <unknown>\n#15 0x55764d9997dc <unknown>\n#16 0x7f4d21094ac3 <unknown>",
        "time" : {
          "start" : 1719326203742,
          "stop" : 1719326203742,
          "duration" : 0
        }
      }, {
        "uid" : "7399974e95d4279e",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/3//#testresult/7399974e95d4279e",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5604aee696aa <unknown>\n#1 0x5604aeb4c0dc <unknown>\n#2 0x5604aeb8102a <unknown>\n#3 0x5604aeb7d43b <unknown>\n#4 0x5604aebc7ef9 <unknown>\n#5 0x5604aebbb613 <unknown>\n#6 0x5604aeb8b4f7 <unknown>\n#7 0x5604aeb8be4e <unknown>\n#8 0x5604aee2f87b <unknown>\n#9 0x5604aee33921 <unknown>\n#10 0x5604aee1b36e <unknown>\n#11 0x5604aee34482 <unknown>\n#12 0x5604aedffccf <unknown>\n#13 0x5604aee590a8 <unknown>\n#14 0x5604aee59280 <unknown>\n#15 0x5604aee687dc <unknown>\n#16 0x7fc86c294ac3 <unknown>",
        "time" : {
          "start" : 1719324158677,
          "stop" : 1719324158677,
          "duration" : 0
        }
      }, {
        "uid" : "e5fc09fa67d2b8b1",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/2//#testresult/e5fc09fa67d2b8b1",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55d66f2ed6aa <unknown>\n#1 0x55d66efd00dc <unknown>\n#2 0x55d66f00502a <unknown>\n#3 0x55d66f00143b <unknown>\n#4 0x55d66f04bef9 <unknown>\n#5 0x55d66f03f613 <unknown>\n#6 0x55d66f00f4f7 <unknown>\n#7 0x55d66f00fe4e <unknown>\n#8 0x55d66f2b387b <unknown>\n#9 0x55d66f2b7921 <unknown>\n#10 0x55d66f29f36e <unknown>\n#11 0x55d66f2b8482 <unknown>\n#12 0x55d66f283ccf <unknown>\n#13 0x55d66f2dd0a8 <unknown>\n#14 0x55d66f2dd280 <unknown>\n#15 0x55d66f2ec7dc <unknown>\n#16 0x7fc622e94ac3 <unknown>",
        "time" : {
          "start" : 1719324131607,
          "stop" : 1719324131607,
          "duration" : 0
        }
      }, {
        "uid" : "7102eb01a327a22c",
        "reportUrl" : "https://YuryHerasimau.github.io/selenium_waits/1//#testresult/7102eb01a327a22c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b3dc9856aa <unknown>\n#1 0x55b3dc6680dc <unknown>\n#2 0x55b3dc69d02a <unknown>\n#3 0x55b3dc69943b <unknown>\n#4 0x55b3dc6e3ef9 <unknown>\n#5 0x55b3dc6d7613 <unknown>\n#6 0x55b3dc6a74f7 <unknown>\n#7 0x55b3dc6a7e4e <unknown>\n#8 0x55b3dc94b87b <unknown>\n#9 0x55b3dc94f921 <unknown>\n#10 0x55b3dc93736e <unknown>\n#11 0x55b3dc950482 <unknown>\n#12 0x55b3dc91bccf <unknown>\n#13 0x55b3dc9750a8 <unknown>\n#14 0x55b3dc975280 <unknown>\n#15 0x55b3dc9847dc <unknown>\n#16 0x7f527d894ac3 <unknown>",
        "time" : {
          "start" : 1719323940065,
          "stop" : 1719323940065,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3d27754e3ac66ae7.json",
  "parameterValues" : [ ]
}